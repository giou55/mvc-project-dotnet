Installing the package that contains the ASP.NET Core Identity support 
for Entity Framework Core:

dotnet add package Microsoft.AspNetCore.Identity.EntityFrameworkCore --version 6.0.0

------------------------------------------------------------------------------------------

Use the RoleManager<T> class to manage the roles 
and use the UserManager<T> class to assign users to roles.

-----------------------------------------------------------------------------------------

ASP.NET Identity requires a database, which is managed through Entity Framework Core:

using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;

namespace Advanced.Models {
	public class IdentityContext: IdentityDbContext<IdentityUser> {
		public IdentityContext(DbContextOptions<IdentityContext> options)
			: base(options) { }
	}
}

The ASP.NET Core Identity package includes the IdentityDbContext<T> class, which is used to create
an Entity Framework Core context class. The generic type argument T is used to specify the class 
that will represent users in the database. You can create custom user classes, but I have used 
the basic class, called IdentityUser

----------------------------------------------------------------------------------------

A connection string to the appsettings.json file is required to tell ASP.NET Core Identity 
where it should store its data. 

-------------------------------------------------------------------------------------------

Configuring Identity in the Program.cs file:

using Microsoft.AspNetCore.Identity;

builder.Services.AddDbContext<IdentityContext>(opts =>
	opts.UseSqlServer(builder.Configuration[
		"ConnectionStrings:IdentityConnection"]));

//configure application so the Identity database context is set up as a service
builder.Services.AddIdentity<IdentityUser, IdentityRole>()
	.AddEntityFrameworkStores<IdentityContext>();

--------------------------------------------------------------------------------------------

The remaining step is to create the Entity Framework Core database migration and 
apply it to create the database:

dotnet ef migrations add --context IdentityContext Initial
dotnet ef database update --context IdentityContext

--------------------------------------------------------------------------------------------